pipeline{
    agent any

    environment{
        VENV_DIR = 'venv'
        GCP_PROJECT = 'windy-renderer-467803-u4'
        GCLOUD_PATH = '/var/jenkins_home/google-cloud-sdk/bin'
    }

    stages {
        stage('Checkout with sparse checkout') {
            steps {
                // Checkout the repo as usual (downloads full .git history, but youâ€™ll prune files next)
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/pareekpulkit/brainwave-basket.git',
                        credentialsId: 'github-token'
                    ]],
                    extensions: [
                        [$class: 'CleanBeforeCheckout'],
                    ]
                ])
                script {
                    // Enable sparse checkout after the repo is cloned
                    sh '''
                    git config core.sparseCheckout true
                    echo "Hotel Reservation Prediction/" > .git/info/sparse-checkout
                    git read-tree -mu HEAD
                    '''
                }
            }
        }
        stage('Setting up our virtual Environment'){
            steps{
                script{
                    echo 'Setting up our virtual Environment..............'
                    sh '''
                    cd "Hotel Reservation Prediction"
                    python -m venv  ${VENV_DIR}
                    . ${VENV_DIR}/bin/activate
                    pip install --upgrade pip 
                    pip install -e .
                    '''
                    
                }
            }
        }
        stage('Building and Pushing docker image to GCR'){
            steps{
                withCredentials([file(credentialsId: 'gcp-key', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]){
                    script{
                    echo 'Building and Pushing docker image to GCR..............'
                    sh '''
                    export PATH=$PATH:${GCLOUD_PATH}

                    gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}

                    gcloud config set project ${GCP_PROJECT}

                    gcloud auth configure-docker --quiet
                    ls
                    cd "/var/jenkins_home/workspace/hotel-reservation-prediction/Hotel Reservation Prediction"
                    ls
                    docker build -t gcr.io/${GCP_PROJECT}/hotel-reservation-pred:latest .
                    docker push gcr.io/${GCP_PROJECT}/hotel-reservation-pred 

                    '''
                    
                    }
                }
                
            }
        }
        stage('Deploy to google cloud run'){
            steps{
                script{
                    echo 'Deploy to google cloud run..............'
                    sh '''
                    export PATH=$PATH:${GCLOUD_PATH}

                    gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}

                    gcloud config set project ${GCP_PROJECT}

                    gcloud run deploy hotel-reservation-pred \
                        --image=gcr.io/${GCP_PROJECT}/hotel-reservation-pred:latest
                        --platform=managed \
                        --region=us-central1 \
                        --allow-unauthenticated

                    '''
                    
                }
            }
        }
    }
}